val bankText = sc.textFile("/home/hari/dataset/bank/bank.csv")

case class Bank(age:Integer, job:String, martial:String, education:String, balance: Integer)
//case class Bank(age:Integer, job:String, marital : String, education : String, balance : Integer)

// split each line, filter out header (starts with "age"), and map it into Bank case class

val bank = bankText.map(s=>s.split(";")).filter(s=>s(0)!="\"age\"").map(s=>Bank(s(0).toInt,
                                                                        s(1).replaceAll("\"", ""),
                                                                        s(2).replaceAll("\"", ""),
                                                                        s(3).replaceAll("\"", ""),
                                                                        s(5).replaceAll("\"", "").toInt
                                                                        )
                                                                        )
// convert to DataFrame and create temporal table
bank.toDF().registerTempTable("bank")


Data 

//Suppose we want to see age distribution from bank. To do this, run:

%sql select age, count(1) from bank where age < 30 group by age order by age

//You can make input box for setting age condition by replacing 30 with ${maxAge=30}.

%sql select age, count(1) from bank where age < ${maxAge=30} group by age order by age

//Now we want to see age distribution with certain marital status and add combo box to select marital status. Run:
%sql select age, count(1) from bank where marital="${marital=single,single|divorced|married}" group by age order by age

